name: buildAndDeploy

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    env:
      EXTENSION_DIR_PATH: 'extension'
      PACKED_ZIP_PATH: 'build/extension.zip'
      OFFLINE_CRX_PATH: 'build/extension.offline.crx'
      WEBSTORE_PUBLISHED_CRX_PATH: 'build/extension.webstore.crx'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - uses: olegtarasov/get-tag@v2
      id: tagName

    - name: Pack directory
      id: packExtensionDir
      uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
      with:
        extensionDir: ${{ env.EXTENSION_DIR_PATH }}
        zipFilePath: ${{ env.PACKED_ZIP_PATH }}

    - name: Build crx
      id: build_crx
      uses: cardinalby/webext-buildtools-chrome-crx-action@v2
      with:
        zipFilePath: ${{ env.PACKED_ZIP_PATH }}
        crxFilePath: ${{ env.OFFLINE_CRX_PATH }}
        privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}

#    - name: Deploy to Google Web Store
#      id: deploy_google_web_store
#      uses: cardinalby/webext-buildtools-chrome-webstore-action@master
#      with:
#        extensionDir: 'extension'
#        extensionId: ${{ secrets.G_EXTENSION_ID }}
#        apiClientId: ${{ secrets.G_CLIENT_ID }}
#        apiClientSecret: ${{ secrets.G_CLIENT_SECRET }}
#        apiRefreshToken: ${{ secrets.G_REFRESH_TOKEN }}
#        downloadCrxFilePath: ${{ env.WEBSTORE_PUBLISHED_CRX_PATH }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tagName.outputs.tag }}
        release_name: Release ${{ steps.tagName.outputs.tag }}
        body: Extension release
        draft: false
        prerelease: false

    - name: Upload offline crx release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.build_crx.outputs.crxFilePath }}
        asset_name: extension.offline.crx
        asset_content_type: application/x-chrome-extension

#    - name: Upload webstore published crx release asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ${{ steps.deploy_google_web_store.outputs.crxFilePath }}
#        asset_name: extension.webstore.crx
#        asset_content_type: application/x-chrome-extension