# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - master

jobs:
  deploy:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm install
    - name: Deploy extension to webstores
      run: npm run buildAll
      env:
        G_REFRESH_TOKEN: ${{secrets.G_REFRESH_TOKEN}}
        G_EXTENSION_ID: ${{secrets.G_EXTENSION_ID}}
        G_CLIENT_SECRET: ${{secrets.G_CLIENT_SECRET}}
        G_CLIENT_ID: ${{secrets.G_CLIENT_ID}}
        FF_EXTENSION_ID: ${{secrets.FF_EXTENSION_ID}}
        FF_OFFLINE_EXT_ID: ${{secrets.FF_OFFLINE_EXT_ID}}
        FF_JWT_ISSUER: ${{secrets.FF_JWT_ISSUER}}
        FF_JWT_SECRET: ${{secrets.FF_JWT_SECRET}}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Extension release
        draft: false
        prerelease: false
    - name: Upload Release Asset (zip)
      id: upload-release-asset-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/extension.zip
        asset_name: extension.zip
        asset_content_type: application/zip
    - name: Upload Release Asset (crx)
      id: upload-release-asset-crx
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/extensionDeployed.crx
        asset_name: extension.crx
        asset_content_type: application/x-chrome-extension
    - name: Upload Release Asset (xpi)
      id: upload-release-asset-xpi
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/extension.xpi
        asset_name: extension.xpi
        asset_content_type: application/x-xpinstall