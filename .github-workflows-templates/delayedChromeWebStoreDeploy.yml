name: "delayed-chrome-web-store-deploy"
on:
  schedule:
    - cron:  '15 3 */1 * *' # At 03:15 on every day-of-month

jobs:
  repeatChromeReleaseSteps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout by tag
        id: checkoutTag
        uses: actions/checkout@v2
        continue-on-error: true
        with:
          ref: ${{ env.DELAYED_JOB_CHECKOUT_REF }}

      - name: Remove this scheduled job if tag not found or after 30 attempts
        uses: cardinalby/unschedule-job-action@v1
        if: steps.checkoutTag.outcome != 'success' || github.run_number > 100
        with:
          ghToken: ${{ secrets.WORKFLOWS_TOKEN }}

      - name: Get checked out commit SHA
        id: getCommitSha
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Pack directory
        id: packExtensionDir
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: ${{ env.EXTENSION_DIR_PATH }}
          zipFilePath: ${{ env.PACKED_ZIP_PATH }}

      - name: Fetch Google API access token
        id: gAccessToken
        uses: cardinalby/google-api-fetch-token-action@v1
        with:
          clientId: ${{ secrets.G_CLIENT_ID }}
          clientSecret: ${{ secrets.G_CLIENT_SECRET }}
          refreshToken: ${{ secrets.G_REFRESH_TOKEN }}

      - name: Upload to Google Web Store
        id: gWebStoreUpload
        uses: cardinalby/webext-buildtools-chrome-webstore-upload-action@master
        with:
          zipFilePath: ${{ env.PACKED_ZIP_PATH }}
          extensionId: ${{ secrets.G_EXTENSION_ID }}
          apiAccessToken: ${{ steps.gAccessToken.outputs.accessToken }}

      - name: Publish at Google Web Store
        id: gWebStorePublish
        uses: cardinalby/webext-buildtools-chrome-webstore-publish-action@master
        with:
          extensionId: ${{ secrets.G_EXTENSION_ID }}
          apiAccessToken: ${{ steps.gAccessToken.outputs.accessToken }}

      - name: Remove this scheduled job
        uses: cardinalby/unschedule-job-action@v1
        with:
          ghToken: ${{ secrets.WORKFLOWS_TOKEN }}

      - id: getRelease
        uses: cardinalby/git-get-release-action@master
        continue-on-error: true
        with:
          commitSha: ${{ steps.getCommitSha.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Download published crx file
        id: gWebStoreDownloadCrx
        if: steps.getRelease.outcome == 'success'
        uses: cardinalby/webext-buildtools-chrome-webstore-download-crx-action@master
        with:
          extensionId: ${{ secrets.G_EXTENSION_ID }}
          crxFilePath: ${{ env.WEBSTORE_PUBLISHED_CRX_PATH }}

      - name: Upload webstore published crx release asset
        if: steps.getRelease.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.getRelease.outputs.upload_url }}
          asset_path: ${{ steps.gWebStoreDownloadCrx.outputs.crxFilePath }}
          asset_name: ${{ env.WEBSTORE_PUBLISHED_CRX_ASSET_NAME }}
          asset_content_type: application/x-chrome-extension